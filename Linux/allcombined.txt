Занятие №1. Подключение Линукс

1. sudo apt update = обновить список пакетов
4. sudo apt install mc = установить пакет mc
5. sudo apt install openssh-server = установить ssh-сервер

ctrl + l = clear = очистить консоль

mc = запуск midnight commander

ctrl + O = скрыть панели mc

sudo apt install openssh-server

если знаем только начало: нажимаем tab и получаем все, что есть.
можем часто нажимать tab

6. ip a = список интерфейсов
ip -c a = список ip адресов раскрашенный
systemctl status ssh = команда для проверки статусов сервисов

подключиться по openssh через powershell:
7. ssh db@10.13.4.190 = ip4 адрес виртуальной машины, хостовая система

exit = выход из powershell
ssh -p 8022 db@localhost = подключаемся как бы сами к себе

Установка гостевых пакетов
sudo apt update
2. sudo apt install gcc make perl = компилятор языка с
3. sudo ./VBoxLinuxAdditions.run

sudo reboot = перезагрузка
sudo usermod -aG vboxsf db = добавляем нас в группу пользователей shared папки для того, чтобы входить без пароля. Можно задать папку Shared там, где это необходимо!! не обязательно в downloads.

ctrl+shift+c
ctrl+shift+v

ctrl+c = завершение текущего процесса

9. sudo usermod -aG vboxsf aleksey_gb

*** Лекция №2.Работа с файлами ***

sudo su = переключение на суперпользователя
/home/aleksey_gb - домашняя папка для пользователя
переход в домашний каталог: cd или cd ~
cd / = переход в корень
ls -al = просмотреть все файлы в каталоге с полной детализацией
ls = просто просмотреть все файлы в каталоге
. = точка - скрытые файлы 
ls -l = все, кто не начинаются на точку.
/dev = устройства (блочные или символьные)
/proc = о процессах системы (только специальные виды файлов)
/sys = информация о системе
/run = временные файлы состояния
cat cpuinfo = распечатка файла cpuinfo

Команды работы с файлами:
ls = список файлов (list)
pwd = текущая директория (print working directory)
mkdir = создание каталога (make directory)
cp = копирование (copy)
rm = удаление (remove)
mv = переименование, или перенос (move)
touch = создание пустого файла или изменение его свойств
cat = вывод файла, склейка, создание

длинные параметры начинаются с двух дефисов
короткие параметры начинаютс с одного дефиса и их можно объединять
мета данные - данные об элементе
команда --help = справка по команде!
man ls = документация по команде ls!

q, или quit = выход из man

mkdir -p 1/2/3/4/5 = создание всех вложенных каталогов до 5
ll = псевдоним команды ls с определенными параметрами (ls -al).

cd ~/test = переход в домашний каталог (директорию) и папку test

cat > testfile = создаем testfile и после набираем текст, который будет записан в файл. CTRL+D = закрыть файл и сохранить все изменения

cp testfile (источник) test2 (куда) = копирование файла testfile в test2 (создается при копировании).

cp -r test test2 = копирование каталога test в test2 рекурсивно (включая все вложенные файлы). Без ключа -r копировать не будет!

mv = remove = перенос или копирование с удалением. Если в рамках одного дискового пространства, то просто переименование (старое меняем на новое). Если в рамках разных пространств, то нужно будет копирование и удаление.

mv = всегда рекурсивно, не требует ключа -r

rm = удаление файлов. -f = удаление без вопросов, force. -r = рекурсивно
rm test2 = удаление файлов или директорий

рекомендуется указывать полный путь к удаляемому файлу или каталогу!

touch testt = создание файла пустой длины testt

cat testfile test2 > test_all = склейка двух файлов в новый

cat test_all = распечатка в консоль файла test_all

cd /home/db = 

cd ../.. = уйти на два уровня вверх

ln test2 test_ln = создаем жесткую ссылку и файл test_ln 

ls -ali = показать номера inode для каждого файла или папки
ls -aliFh = показать со слешем и размер файла

cat >> test_ln = дозаписать что-то в test_ln

inode = ссылка на пространство жесткого диска, метаданные,

для директориев делать жесткие ссылки пользователи не могут. Но они есть - на уровень вверх и уровень вниз.

ln -s test2 test_lns

ln -s /home/db/test3/test2 test_lns_abs

vim <имя файла> = открытие файла в vim

vimtutor = обучение работы с vim

Nano:
ctrl+g = справка
ctrl+o = сохранение
ctrl+x = выход
alt+n = включение номеров строк
ctrl+w = поиск

MCedit
f2 = сохранить
f10 = выход
alt+n = включить номера строк
f7 = поиск
f3 = выделение блока
f9 = меню

head -n 3 .bashrc = первые три строчки файла bashrc

tail -f /var/log/auth.log = отслеживание изменений в файле в реальном времени
ctrl + c = остановка выполнения команды

apt = менеджер пакетов, это круто

*** Семинар 2 ***

sudo apt install terminator = установка терминала terminator
ctrl + alt + t = запуск последнего терминала

sudo apt install screenfetch = установка программы
screenfetch = запуск программы screenfetch - вся информация о  системе

sudo su = перейти в режим суперпользователя
ctrl+d = возврат в роль обычного пользователя

sudo apt install cmatrix = установка программы
cmatrix = запуск программы

cd - = вернуться назад на предыдущую директорию.

echo $OLDPWD = посмотреть, что хранится в переменной OLDPWD

ctrl + d = закрыть терминал, отправить end of file
ctrl + l = скрыть все ранее введенное
clear = удаление

source .bashrc = перезапуск bashrc, но не простой.
tree -L 5 = глубина вложенных папок
mkdir -p = создание всех вложенных каталогов, если они не существуют

rm -r = удаление каталога со вложенными файлами
одинарный уголок перезаписывает!
двойной уголок дописывает!

cat file1 file2 > file4
ln file link = жесткая ссылка
ln -s file slink = символьная ссылка

watch tail file222 = будет показывать каждые две секунды изменения в файле
watch -n 0.5 tail file222 = каждые 0,5 секунд показывать логи (любая команда вместо tail и имя файла

nano config = открыть файл config в nano

*** Лекция3 ***
cat /etc/passwd = просмотр всех пользователей, которые есть в системе
cat /etc/group = просмотр всех групп
cat /etc/shadow = просмотр всех паролей

useradd
adduser 
usermod
userdel
passwd
chage = изменение свойств пароля
groupadd
groupdel

sudo useradd -s /bin/bash -m -d /home/testuser testuser
	     задаем оболчку 
			  задаем домашний каталог и прописываем путь к нему 
				                задаем логин пользователю

tail /etc/passwd

sudo adduser testuser2 = потребуется ввод пароля
passwd = смена пароля для текущего пользователя
sudo passwd testuser = пароль для пользователя
sudo ls -al /home/testuser = просмотр каталогов пользователя

ls -al /etc/skel = скелетон для новых пользователей. Можем менять состав в этой папке, как захотим

sudo usermod -aG adm testuser = добавление пользователя в группу testuser
[append G = список дополнительных групп]

id = список групп
sudo id testuser = список групп пользователя

sudo usermod -g www-data testuser = смена основной группы
sudo userdel testuser2 = удаление пользователя, файлы сохраняются

sudo chage testuser = управление паролем пользователя, которые есть в системе

sudo groupadd testgroup = создание группы
sudo groupdel testgroup = удаление группы

su = substitute user = переключение пользователя
sudo su = переключение на суперпользователя
/etc/sudoers = конфигурация sudo
visudo = редактирование 

su testuser = запросит пароль от testuser
exit = завершает сеанс работы подмененного нового пользователя

**sudo visudo = открывается временный файл /etc/sudoers.tmp

chown -R = изменение владельца или группы владельца файлов или групп рекурсивно
chown testuser:testgroup = определение сразу и владельца, и группы

Менять владельцев файлов или групп - опасно, всегда пишем абсолютный путь!

sudo chown testuser:www-data testt
sudo chown -R testuser:www-data /home/db/test3 - пример опасной команды
sudo chgrp -R adm /home/db/test3
sudo chgrp -R www-data /home/db/test3

chmod -R testdir/ 
chmod u=rwx, g=rx, o=r testfile
chmod 751 testfile
chmod a+x
chmod 4755

sudo chmod u=rwx, g=rw, o=rx test2 = user, group, others
sudo chmod 664 test2 = стандартные права доступа 4=чтение, 2=запись, 7=исполнение

ctrl+x и c = вызов команды chmod в MC

sudo chmod -r test3 = удаляем возможность чтения
sudo chmod +r test3 = добавляем возможность чтения директории
sudo chmod u+rwx, g=rw, o-rx test2 = добавляем, оставляем, убираем

sudo chmod g+s = sgid бит
sudo chmod u+s = suid бит
sudo chmod a+w /home/db/test3 = дали права на запись

создаем файл от имени владельца группы... интересно
t = sticky bit

значение umask = 022 = понижение прав доступа, права по умолчанию
umask 
umask 022 = 

*** Семинар 3. ***
useradd -m -d /home/second_user_dir -s /bin/bash -G sudo second_user

ctrl+a = курсор в самое начало
ctrl+e = курсор в самый конец
sudo !! = подстановка предыдущей команды

sudo passwd second_user
sudo cat /etc/shadow = посмотреть файлик с паролями

su = switch/swap user 
su second_user = войти под другим пользователем. Потребуется ввод пароля
ll /etc/skel/ = 
ls -aliF /etc/skel/ = посмотреть файлы, которые по умолчанию

nano .nanorc = создать файл .nanorc
sudo cp .nanorc /etc/skel/
sudo cp .nanorc /root/

sudo adduser new_user

su new_user = войти под другим пользователем
sudo usermod = если не добавили в папку sudo, то выполнение действий от имени этого пользователя не будет возможно

sudo groups new_user = просмотр всех групп пользователя
sudo usermod --help

cat /etc/group = посмотреть список всех групп и кто в них входит

***sudo usermod -aG sudo new_user = добавление новому юзеру группы sudo
groups new_user = все группы для нового юзера

sudo groupadd new_group

sudo gpasswd = управление группами, устаревшая команда немного
sudo gpasswd -d new_user sudo = удалить пользователя new_user из группы sudo

sudo passwd root = назначить пароль для root
new_user ALL=(ALL:ALL) /usr/bin/ls = в файле /etc/sudoers
sudo visudo = открываем файл sudoers.tmp

rm * = удаление сразу всех файлов
sudo chown new_user file = назначить владельца файла другому
sudo chown second:user:new_user file = меняем и владельца, и группу файлу
sudo chgrp <имя группы> file = меняем группу для файла

chgrp --help = зайти, посмотреть справку, если хочешь.
chmod a=r file = дать всем право только на чтение, установили символом равно!
chmod u+w file = пользователю дать право дополнительно на запись, добавили!
chmod g+x file = дать группе возможность и запускать
chmod o-r file = отнять чтение у остальных

rwx rw- r--
111 110 100

chmod 764 file = установить права как указано выше
1 шестьнадцатеричная цифра соответствует 4 двоичным цифрам
первый регистр - это 4, второй регистр - это 2, третий регистр - это 1

umask = 0002 = забиваем эту команду в строку и выводит такую маску
у директории 777 минус наша маска
у файлов 666 минус эта маска

777 - 002 = 775 = 111 111 101 = rwx rwx r-x
666 - 002 = 664 = 110 110 100 = rw- rw- r--

umask 003 = задать  маску 003
umask = проверить маску

umask сбрасывается при перезапуске
chmod g+x file = назначить бит SGID
chmod u+s file = начначить бит SUID 
S - х выключен
s - x включен
